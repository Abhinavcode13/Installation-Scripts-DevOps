-> Docker contains instructions to build docker image.
-> In Dockerfile , we will use DSL (Domain specific language) keywords.
-> Dokcer engine will process Dockerfile instructions from top to bottom.

DSL keyowrds : FROM , MAINTAINER , COPY , ADD , RUN , CMD , ENTRYPOINT , ENV , LABEL , USER , WORKDIR , EXPOSE , VOLUME.

FROM
+++++++++++++++
It indicates base image to run the application . On top of base image we will create our image.
Syntax : FROM <IMAGE-NAME>
Example : FROM tomcat:9.2

MAINTAINER
+++++++++++++++
Represents the author of the Dockerfile
Ex : MAINTAINER Abhinav kumar

COPY
+++++++++++++++

It is useed to copy file/folders to image while creating image.
Syntax : COPY <SOURCE> <DESTINATION>
Ex : COPY  target/maven-web-app.var /usr/local/tomcat/webapp/maven-app.var

ADD
+++++++++++++++
ADD is used to copy files to image while creating an image.
ADD keyword can download files from remote location (http)
ADD keyword is only used to extract tar files while copying to image.
Syntax : ADD <url-to-download> <destination>

RUN
+++++++++++++++
Used to execute commands on top of base image.
Run command instructions will execute while creating the image.
There can be multiple RUN instructions which are executed from top to bottom.
Ex : RUN mkdir workspace , RUN yum install git

CMD
+++++++++++++++
It is also used to execute the commands.
CMD instructions will execute while creating the conatiners.
We can write multiple CMD instructions but docker will process only last CMD instruction.
Ex : CMD sudo start tomcat

ENTRYPOINT
+++++++++++++++
ENTRYPOINT instructions we cannot override while CMD instructions can.
Ex : ENTRYPOINT["echo", "Welcome"]

WORKDIR
+++++++++++++++
It is used to set working directory for an image/conatiner.
Ex : WORKDIR <DIR-PATH>

ENV
+++++++++++++++
It is used to set the environment variables.
Ex : ENV <key><value>

LABEL
+++++++++++++++
It represent the data in key-value pair.
It is used to add meta data for our image.
EX : LABEL branchname release

ARG 
+++++++++++++++
It is used to avoid hard coded value in Dockerfile
We can pass arguement values in runtime.
Ex : docker build -t imageone --build-arg branch=feature

USER
+++++++++++++++
We can set user for an image/container
Note : After user instruction , remaining instructions will be proceed with given USER.

EXPOSE
+++++++++++++++
It represents on which port number our conatiner is running.

VOLUME
+++++++++++++++

->docker volume is used to persist data generated by the docker conatiner
->Using docker container we can share data among multiple container.

To display docker volume commands
docker volume --help

create docker volume
docker volume <volume-namee>

display docker volume
docker volume ls

inspect a volume
docker volume inspect <volume-name>

Remove a volume
docker volume prune


